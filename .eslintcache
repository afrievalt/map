[{"C:\\code\\parent-pickup\\src\\index.js":"1","C:\\code\\parent-pickup\\src\\reportWebVitals.js":"2","C:\\code\\parent-pickup\\src\\App.js":"3","C:\\code\\parent-pickup\\src\\store\\createStore.js":"4","C:\\code\\parent-pickup\\src\\controls\\FirebaseListener.jsx":"5","C:\\code\\parent-pickup\\src\\pages\\SignUpForm\\index.js":"6","C:\\code\\parent-pickup\\src\\store\\rootReducer.js":"7","C:\\code\\parent-pickup\\src\\store\\firebaseConfig.js":"8","C:\\code\\parent-pickup\\src\\store\\routePaths.js":"9","C:\\code\\parent-pickup\\src\\pages\\SignUpForm\\SignUp.form.jsx":"10","C:\\code\\parent-pickup\\src\\pages\\SignUpForm\\validate.js":"11","C:\\code\\parent-pickup\\src\\store\\auth.duck.js":"12","C:\\code\\parent-pickup\\src\\hooks\\useActions.js":"13","C:\\code\\parent-pickup\\src\\form\\Input.field.jsx":"14","C:\\code\\parent-pickup\\src\\form\\SimpleForm.jsx":"15","C:\\code\\parent-pickup\\src\\form\\validationHelpers.js":"16","C:\\code\\parent-pickup\\src\\form\\FieldWrapper.jsx":"17","C:\\code\\parent-pickup\\src\\controls\\Route.jsx":"18","C:\\code\\parent-pickup\\src\\pages\\Home\\Home.jsx":"19","C:\\code\\parent-pickup\\src\\pages\\Home\\index.js":"20","C:\\code\\parent-pickup\\src\\pages\\SignInForm\\index.js":"21","C:\\code\\parent-pickup\\src\\pages\\SignInForm\\SignIn.form.jsx":"22","C:\\code\\parent-pickup\\src\\pages\\SignInForm\\validate.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":819,"mtime":1609246005974,"results":"27","hashOfConfig":"25"},{"size":1212,"mtime":1609072201631,"results":"28","hashOfConfig":"25"},{"size":211,"mtime":1608990439045,"results":"29","hashOfConfig":"25"},{"size":67,"mtime":1609074219241,"results":"30","hashOfConfig":"25"},{"size":360,"mtime":1609160071751,"results":"31","hashOfConfig":"25"},{"size":404,"mtime":1608747250676,"results":"32","hashOfConfig":"25"},{"size":218,"mtime":1609245375061,"results":"33","hashOfConfig":"25"},{"size":938,"mtime":1609074162921,"results":"34","hashOfConfig":"25"},{"size":236,"mtime":1608380059156,"results":"35","hashOfConfig":"25"},{"size":1357,"mtime":1609247473010,"results":"36","hashOfConfig":"25"},{"size":461,"mtime":1608986159741,"results":"37","hashOfConfig":"25"},{"size":1069,"mtime":1608384297273,"results":"38","hashOfConfig":"25"},{"size":774,"mtime":1608293636072,"results":"39","hashOfConfig":"25"},{"size":5503,"mtime":1608382688878,"results":"40","hashOfConfig":"25"},{"size":355,"mtime":1607954998307,"results":"41","hashOfConfig":"25"},{"size":256,"mtime":1609071311950,"results":"42","hashOfConfig":"25"},{"size":342,"mtime":1609245420854,"results":"43","hashOfConfig":"25"},{"size":48,"mtime":1609074332958,"results":"44","hashOfConfig":"25"},{"size":67,"mtime":1609246406611,"results":"45","hashOfConfig":"25"},{"size":930,"mtime":1609248320199,"results":"46","hashOfConfig":"25"},{"size":236,"mtime":1609246406617,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"5xhvpo",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\code\\parent-pickup\\src\\index.js",[],["98","99"],"C:\\code\\parent-pickup\\src\\reportWebVitals.js",[],"C:\\code\\parent-pickup\\src\\App.js",[],"C:\\code\\parent-pickup\\src\\store\\createStore.js",[],"C:\\code\\parent-pickup\\src\\controls\\FirebaseListener.jsx",[],"C:\\code\\parent-pickup\\src\\pages\\SignUpForm\\index.js",[],"C:\\code\\parent-pickup\\src\\store\\rootReducer.js",[],"C:\\code\\parent-pickup\\src\\store\\firebaseConfig.js",[],"C:\\code\\parent-pickup\\src\\store\\routePaths.js",[],"C:\\code\\parent-pickup\\src\\pages\\SignUpForm\\SignUp.form.jsx",[],"C:\\code\\parent-pickup\\src\\pages\\SignUpForm\\validate.js",[],"C:\\code\\parent-pickup\\src\\store\\auth.duck.js",[],"C:\\code\\parent-pickup\\src\\hooks\\useActions.js",["100","101"],"import { bindActionCreators } from 'redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useMemo } from 'react'\r\n\r\nexport function useActions (actions, deps) {\r\n  const dispatch = useDispatch()\r\n  return useMemo(\r\n    () => {\r\n      if (Array.isArray(actions)) {\r\n        return actions.map((a) => bindActionCreators(a, dispatch))\r\n      }\r\n      return bindActionCreators(actions, dispatch)\r\n    },\r\n    deps ? [dispatch, ...deps] : [dispatch]\r\n  )\r\n}\r\n","C:\\code\\parent-pickup\\src\\form\\Input.field.jsx",[],"C:\\code\\parent-pickup\\src\\form\\SimpleForm.jsx",[],"C:\\code\\parent-pickup\\src\\form\\validationHelpers.js",["102","103","104","105"],"// validateFields replaces the need to write Imperative: if (isTinInvalid(tin))\n// {   result.tin = \"Invalid\"; } if (!providerType) { \t\tresult.providerType =\n// \"Required\"; } if (providerType.length > 1) { \t\tresult.providerType = \"Too\n// long\"; }\n//\n// Declarative usage: validateFields(values, { \t\ttin: isTinInvalid,  // see\n// lambda notes at bottom \t\tproviderType: [isRequired, getMaxLen(1)]\n// \t\t\"name.firstName\": isRequired  })\n//\n//  Notice dot notation is allowed \"name.firstName\" 2 levels deep ONLY  more\n// than 2 levels are not allowed: \"provider.name.firstName\" //error  you can\n// validate deep values like this: \tvalidateFields(values, { \t\ttin:\n// isTinInvalid, \t\tproviderType: isRequired \t\tprovider:\n// validateFields(values.provider, {\"name.firstName\": isRequired})  })\n//\n// Also note, if the field has multiple validation rules, you can pass them in\n// an array. \t\tproviderType: [isRequired, getMaxLen(1)] They will be evaluated\n// from left to right.  The first error will be returned following rules will\n// not be validated\n//\n// see spec file for more usage examples\n\nexport const getFuncValidateFields = validationRules => rawFieldsValues => {\n\t\tconst fieldValues = rawFieldsValues == null\n\t\t\t\t? {}\n\t\t\t\t: rawFieldsValues;\n\t\treturn Object\n\t\t\t\t.keys(validationRules)\n\t\t\t\t.reduce((acc, cur) => {\n\t\t\t\t\t\t// handle dot notation a.b or a in keys\n\t\t\t\t\t\tconst [root,\n\t\t\t\t\t\t\t\tleaf] = cur.split('.'); // we only go 2 levels\n\t\t\t\t\t\tconst key = leaf || root;\n\t\t\t\t\t\tconst leafFieldValues = leaf\n\t\t\t\t\t\t\t\t? fieldValues[root] || {}\n\t\t\t\t\t\t\t\t: fieldValues;\n\t\t\t\t\t\tconst value = leafFieldValues[key];\n\n\t\t\t\t\t\t// handle implicit multiple validation rules\n\t\t\t\t\t\tconst rule = validationRules[cur]; // cur may be \"a.b\"\n\t\t\t\t\t\tconst isFieldInvalidFunction = Array.isArray(rule)\n\t\t\t\t\t\t\t\t? validateMultiple(...rule)\n\t\t\t\t\t\t\t\t: validationRules[cur];\n\t\t\t\t\t\tconst errorMessage = isFieldInvalidFunction(value, fieldValues);\n\t\t\t\t\t\tconst isInvalid = !!errorMessage;\n\t\t\t\t\t\tif (isInvalid) {\n\t\t\t\t\t\t\t\tconst errorNode = leaf\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t[root]: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[leaf]: errorMessage\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t[key]: errorMessage\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t\t\t\t...errorNode\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t}, {} // init acc\n\t\t\t\t);\n};\n\nexport const getIsTooLong = (maxLength) => (fieldValue) => {\n\t\tconst remove = (fieldValue\n\t\t\t\t?.length || 0) - maxLength;\n\t\tconst isTooLong = remove > 0;\n\t\tconst isSingular = remove === 1;\n\t\tconst addS = isSingular\n\t\t\t\t? ''\n\t\t\t\t: 's';\n\t\treturn isTooLong\n\t\t\t\t? `Too long by ${remove} character${addS}`\n\t\t\t\t: '';\n};\n\nexport const MAX_STATE_LENGTH = 2;\nconst isStateInvalid = (state = '') => state\n\t\t?.length === MAX_STATE_LENGTH\n\t\t\t\t? ''\n\t\t\t\t: 'Invalid';\nexport const isRequired = (fieldValue = '') => fieldValue\n\t\t?.length === 0\n\t\t\t\t? '-Required'\n\t\t\t\t: '';\n\nexport const getRegExInvalid = (regex) => (fieldValue = '') => regex.test(fieldValue)\n\t\t? ''\n\t\t: 'Invalid';\nconst getRegExInvalidOrEmpty = (regex) => (fieldValue = '') => {\n\t\tif (fieldValue === '') {\n\t\t\t\treturn '';\n\t\t}\n\t\treturn regex.test(fieldValue)\n\t\t\t\t? ''\n\t\t\t\t: 'Invalid';\n};\n\nconst phoneRegEx = /^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$/;\nexport const isPhoneInvalid = getRegExInvalidOrEmpty(phoneRegEx);\n\nconst usZipRegEx = /^\\d{5}$|^\\d{9}$|^\\d{5}-\\d{4}$/;\nexport const isZipInvalid = getRegExInvalid(usZipRegEx);\n\nconst numPattern = /^\\d+$/;\nexport const isNumberInvalid = getRegExInvalid(numPattern);\n\nexport const validateMultiple = function validateMultiple() {\n\t\tconst outerArguments = [...arguments];\n\t\treturn (value, allValues) => outerArguments.reduce((acc, cur) => acc || cur(value, allValues), '' // init acc\n\t\t);\n};\n\nconst getReduceAllFieldsEmpty = (fieldValues) => (acc, cur, i) => {\n\t\treturn acc && !fieldValues[cur];\n};\nconst VALID = \"\";\nconst INVALID = \"Invalid\"\nconst SUPPRESS = \"-\"\nconst INVALID_FOR_NOW = SUPPRESS + INVALID\n// https://emailregex.com/\nconst emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nconst getFuncFilterOutInvalidEmail = email => emailPart => emailPattern.test(email + emailPart) \nexport const isEmailInvalid = email => {\n\t\tif (!email) {\n\t\t\treturn VALID;\n\t\t}\n\t\tif (emailPattern.test(email)) {\n\t\t\t\treturn VALID;\n\t\t} else {\n\t\t\t\tconst inProgress = [\"@x.com\", \"x.com\", \".com\"];\n\t\t\t\tconst validInProgress = inProgress.filter(getFuncFilterOutInvalidEmail(email))\n\t\t\t\tconst canBecomeValid = validInProgress.length\n\t\t\t\treturn canBecomeValid ? INVALID_FOR_NOW : INVALID\n\t\t}\n}\n\nexport const isDateInvalid = (date = '') => {\n\t\tif (date\n\t\t\t\t?.length > 10) {\n\t\t\t\treturn 'Invalid';\n\t\t}\n\t\tconst datePattern = /(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d/i;\n\t\treturn datePattern.test(date)\n\t\t\t\t? ''\n\t\t\t\t: 'Invalid';\n};\n\nexport const getIsNumberInRange = (min, max) => (fieldValue = '') => {\n\t\tconst toInt = parseInt(fieldValue);\n\t\treturn toInt > max\n\t\t\t\t? `Must be under ${max}`\n\t\t\t\t: toInt < min\n\t\t\t\t\t\t? `Must be at least ${min}`\n\t\t\t\t\t\t: '';\n};\n\nexport const mustMatch = (fieldName, toMatch) => (fieldValue) => {\n\t\treturn fieldValue !== toMatch\n\t\t\t\t? `${fieldName}s do not match`\n\t\t\t\t: '';\n};\n// lambda validateFields takes an object with lambda functions with the\n// following definitions: \t(fieldValue, allFieldValues) => ifError ? \"Error\n// Message\" : \"\" // allFieldValues is only used if your validation depends on\n// other fields values: \tex: fieldValue > allFieldsValues.departureDate","C:\\code\\parent-pickup\\src\\form\\FieldWrapper.jsx",[],"C:\\code\\parent-pickup\\src\\controls\\Route.jsx",["106"],"import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Route = ({ type, children }) => {\r\n  const locationType = useSelector(state => state.location.type)\r\n  return locationType === type ? children : null\r\n}\r\n\r\nexport default Route\r\n","C:\\code\\parent-pickup\\src\\pages\\Home\\Home.jsx",[],"C:\\code\\parent-pickup\\src\\pages\\Home\\index.js",[],"C:\\code\\parent-pickup\\src\\pages\\SignInForm\\index.js",[],"C:\\code\\parent-pickup\\src\\pages\\SignInForm\\SignIn.form.jsx",[],"C:\\code\\parent-pickup\\src\\pages\\SignInForm\\validate.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":14,"column":5,"nodeType":"113","endLine":14,"endColumn":44},{"ruleId":"111","severity":1,"message":"114","line":14,"column":5,"nodeType":"113","endLine":14,"endColumn":44,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":80,"column":7,"nodeType":"118","messageId":"119","endLine":80,"endColumn":21},{"ruleId":"116","severity":1,"message":"120","line":116,"column":7,"nodeType":"118","messageId":"119","endLine":116,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":124,"column":32,"nodeType":"123","messageId":"124","endLine":124,"endColumn":33,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"122","line":124,"column":57,"nodeType":"123","messageId":"124","endLine":124,"endColumn":58,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"127","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useMemo was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ConditionalExpression","React Hook useMemo has missing dependencies: 'actions' and 'dispatch'. Either include them or remove the dependency array.",["130"],"no-unused-vars","'isStateInvalid' is assigned a value but never used.","Identifier","unusedVar","'getReduceAllFieldsEmpty' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["131","132"],["133","134"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"messageId":"137","fix":"138","desc":"139"},{"messageId":"140","fix":"141","desc":"142"},{"messageId":"137","fix":"143","desc":"139"},{"messageId":"140","fix":"144","desc":"142"},"Update the dependencies array to be: [actions, dispatch]",{"range":"145","text":"146"},"removeEscape",{"range":"147","text":"148"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"149","text":"150"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"151","text":"148"},{"range":"152","text":"150"},[412,451],"[actions, dispatch]",[3950,3951],"",[3950,3950],"\\",[3975,3976],[3975,3975]]